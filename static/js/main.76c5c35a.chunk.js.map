{"version":3,"sources":["components/canvas/utils/Circle.js","utils/angleCalc.js","components/canvas/utils/CanvasDrawer.js","components/canvas/Canvas.js","components/settings_menu/SettingsMenu.js","components/values_menu/ValuesMenu.js","App.js","reportWebVitals.js","index.js"],"names":["Circle","centreX","centreY","width","height","radius","this","radians","Math","cos","sin","offset","PI","isInFirstQuadrant","isInSecondQuadrant","isInThirdQuadrant","isInFourthQuadrant","degToRad","degrees","radToDeg","white","green","black","CanvasDrawer","ctx","trigVisible","circleDetails","floor","circle","resetCanvas","isInRightQuadrants","textAlign","isInLeftQuadrants","isInTopQuadrants","textBaseline","isInBottomQuadrants","circleEndCoords","lineEndX","lineEndY","circleCentreX","circleCentreY","lineWidth","strokeStyle","beginPath","moveTo","lineTo","stroke","secLineEndX","sec","cosecLineEndY","csc","tan","cot","font","fillStyle","textAlignOutwards","fillText","toFixed","textAlignTopBottomInwards","textAlignRightLeftInwards","lineEndXToSecLineEndX","lineEndYToSecLineEndY","lineEndXToCosecLineEndX","lineEndYToCosecLineEndY","atan","clearRect","arc","fill","i","degreeUnitLen","radiants","circleEndOffsetCoords","lineStartX","lineStartY","radianUnitLen","degreeUnitValueLen","posX","posY","textAlignInwards","pi","axes","quadrants","e","mouseX","clientX","mouseY","clientY","sqrt","diffX","diffY","atan2","drawAngleLine","Canvas","props","canvasRef","useRef","window","innerWidth","innerHeight","useEffect","canvas","current","getContext","canvasDrawer","radianAngle","angleSelect","mouseDown","onmousedown","onMouseMove","onmousemove","newRadians","handleGraphRadianChange","onmouseup","updateCount","ref","className","SettingsMenu","noOverlay","disableAutoFocus","isOpen","onClick","handleUpdateClicked","style","padding","type","marginLeft","value","degreeAngle","onChange","handleDegreeAngleChange","marginRight","handleRadianAngleChange","id","defaultChecked","handleAngleSelectionChange","handleTrigSelectionChange","paddingTop","paddingBottom","handleCircleDetailChange","ValuesMenu","right","trigValues","App","useState","setDegreeAngle","setRadianAngle","setTrigValues","setAngleSelect","setTrigVisible","setCircleDetails","setUpdateCount","updateTrigValues","event","input","target","parseInt","console","log","checked","newTrigVisible","newCircleDetails","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76c5c35a.chunk.js","sourcesContent":["export default class Circle {\r\n  constructor(centreX, centreY, width, height, radius) {\r\n    this.centreX = centreX;\r\n    this.centreY = centreY;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.radius = radius;\r\n  }\r\n\r\n  circleEndCoords(radians) {\r\n    const posEndX = this.centreX + this.radius * Math.cos(radians);\r\n    const posEndY = this.centreY - this.radius * Math.sin(radians);\r\n    return [posEndX, posEndY];\r\n  }\r\n\r\n  circleEndOffsetCoords(radians, offset) {\r\n    const posEndX = this.centreX + (this.radius + offset) * Math.cos(radians);\r\n    const posEndY = this.centreY - (this.radius + offset) * Math.sin(radians);\r\n    return [posEndX, posEndY];\r\n  }\r\n\r\n  isInFirstQuadrant(radians){\r\n    return radians >= 0 && radians <= Math.PI/2;\r\n  }\r\n\r\n  isInSecondQuadrant(radians){\r\n    return radians > Math.PI/2 && radians <= Math.PI;\r\n  }\r\n\r\n  isInThirdQuadrant(radians){\r\n    return radians > Math.PI && radians <= (3*Math.PI)/2;\r\n  }\r\n\r\n  isInFourthQuadrant(radians){\r\n    return radians > (3*Math.PI)/2 && radians <= 2*Math.PI;\r\n  }\r\n\r\n  isInTopQuadrants(radians){\r\n    return this.isInFirstQuadrant(radians) || this.isInSecondQuadrant(radians);\r\n  }\r\n\r\n  isInBottomQuadrants(radians){\r\n    return this.isInThirdQuadrant(radians) || this.isInFourthQuadrant(radians);\r\n  }\r\n\r\n  isInRightQuadrants(radians){\r\n    return this.isInFirstQuadrant(radians) || this.isInFourthQuadrant(radians);\r\n  }\r\n\r\n  isInLeftQuadrants(radians){\r\n    return this.isInSecondQuadrant(radians) || this.isInThirdQuadrant(radians);\r\n  }\r\n}\r\n","export function degToRad(degrees) {\r\n  return degrees * Math.PI / 180;\r\n}\r\n\r\nexport function radToDeg(radians) {\r\n  return radians * 180 / Math.PI;\r\n}\r\n","import Circle from \"./Circle.js\";\r\n\r\nimport {\r\n  degToRad,\r\n  radToDeg\r\n} from \"../../../utils/angleCalc.js\";\r\n\r\nconst white = \"rgb(255, 255, 255)\";\r\nconst green = \"rgb(36, 173, 48)\";\r\nconst black = \"rgb(40, 44, 52)\";\r\nconst grey = \"rgb(135, 135, 135)\";\r\n\r\nexport default class CanvasDrawer {\r\n  constructor(ctx, width, height, trigVisible, circleDetails) {\r\n    this.ctx = ctx;\r\n    this.width = width;\r\n    this.height = height;\r\n    this.trigVisible = trigVisible;\r\n    this.circleDetails = circleDetails;\r\n    this.radius = Math.floor(height/3);\r\n    this.circle = new Circle(this.width/2, this.height/2, this.width, this.height, this.radius);\r\n    this.resetCanvas();\r\n  }\r\n\r\n  textAlignOutwards(radians){\r\n    if(this.circle.isInRightQuadrants(radians)){\r\n      this.ctx.textAlign = \"start\";\r\n    }\r\n    if(this.circle.isInLeftQuadrants(radians)){\r\n      this.ctx.textAlign = \"end\";\r\n    }\r\n    if(this.circle.isInTopQuadrants(radians)){\r\n      this.ctx.textBaseline = \"bottom\";\r\n    }\r\n    if(this.circle.isInBottomQuadrants(radians)){\r\n      this.ctx.textBaseline = \"top\";\r\n    }\r\n  }\r\n\r\n  textAlignInwards(radians){\r\n    if(this.circle.isInRightQuadrants(radians)){\r\n      this.ctx.textAlign = \"end\";\r\n    }\r\n    if(this.circle.isInLeftQuadrants(radians)){\r\n      this.ctx.textAlign = \"start\";\r\n    }\r\n    if(this.circle.isInTopQuadrants(radians)){\r\n      this.ctx.textBaseline = \"top\";\r\n    }\r\n    if(this.circle.isInBottomQuadrants(radians)){\r\n      this.ctx.textBaseline = \"bottom\";\r\n    }\r\n  }\r\n\r\n  textAlignTopBottomInwards(radians){\r\n    this.ctx.textAlign = \"center\";\r\n    if(this.circle.isInTopQuadrants(radians)){\r\n      this.ctx.textBaseline = \"top\";\r\n    }\r\n    if(this.circle.isInBottomQuadrants(radians)){\r\n      this.ctx.textBaseline = \"bottom\";\r\n    }\r\n  }\r\n\r\n  textAlignRightLeftInwards(radians){\r\n    this.ctx.textBaseline = \"middle\";\r\n    if(this.circle.isInRightQuadrants(radians)){\r\n      this.ctx.textAlign = \"end\";\r\n    }\r\n    if(this.circle.isInLeftQuadrants(radians)){\r\n      this.ctx.textAlign = \"start\";\r\n    }\r\n  }\r\n\r\n  drawAngleLine(radians){\r\n    const [lineEndX, lineEndY] = this.circle.circleEndCoords(radians);\r\n    const circleCentreX = this.circle.centreX;\r\n    const circleCentreY = this.circle.centreY;\r\n    const radius = this.circle.radius;\r\n\r\n    this.ctx.lineWidth = 2;\r\n\r\n    // Draw radians line\r\n    this.ctx.strokeStyle = black;\r\n    this.ctx.beginPath();\r\n    this.ctx.moveTo(circleCentreX, circleCentreY);\r\n    this.ctx.lineTo(lineEndX, lineEndY);\r\n    this.ctx.stroke();\r\n\r\n    // Draw trigonometric function lines\r\n    this.ctx.strokeStyle = green;\r\n\r\n    // Draw sin line\r\n    if(this.trigVisible.sin){\r\n      this.ctx.lineTo(lineEndX, circleCentreY);\r\n    }\r\n\r\n    // Draw cos line\r\n    if(this.trigVisible.cos){\r\n      this.ctx.moveTo(lineEndX, lineEndY);\r\n      this.ctx.lineTo(circleCentreX, lineEndY);\r\n    }\r\n\r\n    // Draw sec line\r\n    const secLineLen = (1/Math.cos(radians)) * radius;\r\n    const secLineEndX = circleCentreX + secLineLen;\r\n    if(this.trigVisible.sec){\r\n      this.ctx.moveTo(circleCentreX, circleCentreY);\r\n      this.ctx.lineTo(secLineEndX, circleCentreY);\r\n    }\r\n\r\n    // Draw cosec line\r\n    const cosecLineLen = (1/Math.sin(radians)) * radius;\r\n    const cosecLineEndY = circleCentreY - cosecLineLen;\r\n    if(this.trigVisible.csc){\r\n      this.ctx.moveTo(circleCentreX, circleCentreY);\r\n      this.ctx.lineTo(circleCentreX, cosecLineEndY);\r\n    }\r\n\r\n    // Draw tan line\r\n    if(this.trigVisible.tan){\r\n      this.ctx.moveTo(lineEndX, lineEndY);\r\n      this.ctx.lineTo(secLineEndX, circleCentreY);\r\n    }\r\n\r\n    // Draw cotan line\r\n    if(this.trigVisible.cot){\r\n      this.ctx.moveTo(lineEndX, lineEndY);\r\n      this.ctx.lineTo(circleCentreX, cosecLineEndY);\r\n    }\r\n\r\n    this.ctx.stroke();\r\n\r\n    // Write radians value\r\n    this.ctx.font = \"20px Consolas\";\r\n    this.ctx.fillStyle = white;\r\n    this.textAlignOutwards(radians);\r\n    this.ctx.fillText(radToDeg(radians).toFixed(2) + \"°\", lineEndX, lineEndY);\r\n\r\n    this.ctx.fillStyle = green;\r\n\r\n    // Write cos values\r\n    if(this.trigVisible.cos){\r\n      this.textAlignTopBottomInwards(radians);\r\n      this.ctx.fillText(Math.cos(radians).toFixed(2), lineEndX+((circleCentreX-lineEndX)/2), lineEndY);\r\n    }\r\n\r\n    // Write sin values\r\n    if(this.trigVisible.sin){\r\n      this.textAlignRightLeftInwards(radians);\r\n      this.ctx.fillText(Math.sin(radians).toFixed(2), lineEndX, lineEndY+((circleCentreY-lineEndY)/2));\r\n    }\r\n\r\n    // Write sec values\r\n    if(this.trigVisible.sec){\r\n      this.textAlignTopBottomInwards(radians);\r\n      this.ctx.fillText((1/Math.cos(radians)).toFixed(2), secLineEndX+((circleCentreX-secLineEndX)/2), circleCentreY);\r\n    }\r\n\r\n    // Write cosec values\r\n    if(this.trigVisible.csc){\r\n      this.textAlignRightLeftInwards(radians);\r\n      this.ctx.fillText((1/Math.sin(radians)).toFixed(2), circleCentreX, cosecLineEndY+((circleCentreY-cosecLineEndY)/2));\r\n    }\r\n\r\n    // Write tan values\r\n    if(this.trigVisible.tan){\r\n      this.textAlignOutwards(radians);\r\n      const lineEndXToSecLineEndX = secLineEndX-lineEndX;\r\n      const lineEndYToSecLineEndY = circleCentreY-lineEndY;\r\n      this.ctx.fillText(Math.tan(radians).toFixed(2), lineEndX+(lineEndXToSecLineEndX/2), circleCentreY-lineEndYToSecLineEndY/2);\r\n    }\r\n\r\n    // Write cotan values\r\n    if(this.trigVisible.cot){\r\n      this.textAlignOutwards(radians);\r\n      const lineEndXToCosecLineEndX = lineEndX-circleCentreX;\r\n      const lineEndYToCosecLineEndY = lineEndY-cosecLineEndY\r\n      this.ctx.fillText(Math.atan(radians).toFixed(2), lineEndX-(lineEndXToCosecLineEndX/2), lineEndY-(lineEndYToCosecLineEndY/2));\r\n    }\r\n  }\r\n\r\n  resetCanvas() {\r\n    const circleCentreX = this.circle.centreX;\r\n    const circleCentreY = this.circle.centreY;\r\n    const radius = this.circle.radius;\r\n\r\n    // Clear the canvas\r\n    this.ctx.clearRect(0, 0, this.width, this.height);\r\n\r\n    // Draw circle\r\n    this.ctx.fillStyle = \"rgb(255, 255, 255)\";\r\n    this.ctx.beginPath();\r\n    this.ctx.arc(circleCentreX, circleCentreY, radius, degToRad(0), degToRad(360), false);\r\n    this.ctx.fill();\r\n\r\n    this.ctx.lineWidth = 1;\r\n\r\n    // Draw degree unit lines\r\n    if(this.circleDetails.degrees){\r\n      this.ctx.strokeStyle = black;\r\n      for(let i=0; i<360; i+=1) {\r\n        let degreeUnitLen = (radius / 30);\r\n        if(i%5 === 0){\r\n          degreeUnitLen = (radius / 20);\r\n        }\r\n        if(i%10 === 0){\r\n          degreeUnitLen = (radius / 15);\r\n        }\r\n\r\n        const radiants = degToRad(i);\r\n        const [lineEndX, lineEndY] = this.circle.circleEndCoords(radiants);\r\n        const [lineStartX, lineStartY] = this.circle.circleEndOffsetCoords(radiants, -degreeUnitLen);\r\n\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(lineStartX, lineStartY);\r\n        this.ctx.lineTo(lineEndX, lineEndY);\r\n        this.ctx.stroke();\r\n      }\r\n    }\r\n\r\n    // Draw radian unit lines\r\n    const radianUnitLen = (radius / 30);\r\n    if(this.circleDetails.radians){\r\n      this.ctx.strokeStyle = white;\r\n      for(let i=0.0; i<(2*Math.PI); i+=0.1) {\r\n        const [lineStartX, lineStartY] = this.circle.circleEndCoords(i);\r\n        const [lineEndX, lineEndY] = this.circle.circleEndOffsetCoords(i, radianUnitLen);\r\n\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(lineStartX, lineStartY);\r\n        this.ctx.lineTo(lineEndX, lineEndY);\r\n        this.ctx.stroke();\r\n      }\r\n    }\r\n\r\n    this.ctx.font = \"12.5px Consolas\";\r\n\r\n    // Write degree unit values\r\n    if(this.circleDetails.degrees){\r\n      this.ctx.fillStyle = black;\r\n      const degreeUnitValueLen = (radius / 15);\r\n      for(let i=0; i<360; i+=10) {\r\n        const radians = degToRad(i);\r\n        const [posX, posY] = this.circle.circleEndOffsetCoords(radians, -degreeUnitValueLen);\r\n\r\n        this.textAlignInwards(radians);\r\n        this.ctx.fillText(i, posX, posY);\r\n      }\r\n    }\r\n\r\n    this.ctx.fillStyle = grey;\r\n\r\n    // Write radian unit values\r\n    if(this.circleDetails.radians){\r\n      for(let i=0.0; i<(2*Math.PI); i+=0.1) {\r\n        const [posX, posY] = this.circle.circleEndOffsetCoords(i, radianUnitLen);\r\n\r\n        this.textAlignOutwards(i);\r\n        this.ctx.fillText(i.toFixed(1), posX, posY);\r\n      }\r\n    }\r\n\r\n    // Write Pi unit values\r\n    if(this.circleDetails.pi){\r\n      this.ctx.font = \"20px Consolas\";\r\n      this.ctx.textAlign = \"start\";\r\n      this.ctx.textBaseline = \"middle\";\r\n      this.ctx.fillText(\"0 & 2π\", circleCentreX + radius + (radianUnitLen * 4), circleCentreY);\r\n\r\n      this.ctx.textBaseline = \"bottom\";\r\n      let [lineEndX, lineEndY] = this.circle.circleEndOffsetCoords(degToRad(30), (radianUnitLen * 4));\r\n      this.ctx.fillText(\"π/6\", lineEndX, lineEndY);\r\n      [lineEndX, lineEndY] = this.circle.circleEndOffsetCoords(degToRad(45), (radianUnitLen * 4));\r\n      this.ctx.fillText(\"π/4\", lineEndX, lineEndY);\r\n      [lineEndX, lineEndY] = this.circle.circleEndOffsetCoords(degToRad(60), (radianUnitLen * 4));\r\n      this.ctx.fillText(\"π/3\", lineEndX, lineEndY);\r\n\r\n      this.ctx.textAlign = \"center\";\r\n      this.ctx.fillText(\"π/2\", circleCentreX, circleCentreY - radius - (radianUnitLen * 4));\r\n\r\n      this.ctx.textAlign = \"end\";\r\n      [lineEndX, lineEndY] = this.circle.circleEndOffsetCoords(degToRad(120), (radianUnitLen * 4));\r\n      this.ctx.fillText(\"2π/3\", lineEndX, lineEndY);\r\n      [lineEndX, lineEndY] = this.circle.circleEndOffsetCoords(degToRad(135), (radianUnitLen * 4));\r\n      this.ctx.fillText(\"3π/4\", lineEndX, lineEndY);\r\n      [lineEndX, lineEndY] = this.circle.circleEndOffsetCoords(degToRad(150), (radianUnitLen * 4));\r\n      this.ctx.fillText(\"5π/6\", lineEndX, lineEndY);\r\n\r\n      this.ctx.textBaseline = \"middle\";\r\n      this.ctx.fillText(\"π\", circleCentreX - radius - (radianUnitLen * 4), circleCentreY);\r\n\r\n      this.ctx.textBaseline = \"top\";\r\n      [lineEndX, lineEndY] = this.circle.circleEndOffsetCoords(degToRad(210), (radianUnitLen * 4));\r\n      this.ctx.fillText(\"7π/6\", lineEndX, lineEndY);\r\n      [lineEndX, lineEndY] = this.circle.circleEndOffsetCoords(degToRad(225), (radianUnitLen * 4));\r\n      this.ctx.fillText(\"5π/4\", lineEndX, lineEndY);\r\n      [lineEndX, lineEndY] = this.circle.circleEndOffsetCoords(degToRad(240), (radianUnitLen * 4));\r\n      this.ctx.fillText(\"4π/3\", lineEndX, lineEndY);\r\n\r\n      this.ctx.textAlign = \"center\";\r\n      this.ctx.fillText(\"3π/2\", circleCentreX, circleCentreY + radius + (radianUnitLen * 4));\r\n\r\n      this.ctx.textAlign = \"start\";\r\n      [lineEndX, lineEndY] = this.circle.circleEndOffsetCoords(degToRad(300), (radianUnitLen * 4));\r\n      this.ctx.fillText(\"5π/3\", lineEndX, lineEndY);\r\n      [lineEndX, lineEndY] = this.circle.circleEndOffsetCoords(degToRad(315), (radianUnitLen * 4));\r\n      this.ctx.fillText(\"7π/4\", lineEndX, lineEndY);\r\n      [lineEndX, lineEndY] = this.circle.circleEndOffsetCoords(degToRad(330), (radianUnitLen * 4));\r\n      this.ctx.fillText(\"11π/6\", lineEndX, lineEndY);\r\n    }\r\n\r\n    // Draw axis lines\r\n    if(this.circleDetails.axes){\r\n      this.ctx.strokeStyle = black;\r\n\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(circleCentreX-radius, circleCentreY);\r\n      this.ctx.lineTo(circleCentreX+radius, circleCentreY);\r\n      this.ctx.stroke();\r\n\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(circleCentreX, circleCentreY-radius);\r\n      this.ctx.lineTo(circleCentreX, circleCentreY+radius);\r\n      this.ctx.stroke();\r\n    }\r\n\r\n    // Write quadtrants\r\n    if(this.circleDetails.quadrants){\r\n      this.ctx.fillStyle = black;\r\n      this.ctx.font = \"17.5px Consolas\";\r\n      this.ctx.textAlign = \"start\";\r\n      this.ctx.textBaseline = \"bottom\";\r\n      this.ctx.fillText(\"I\", circleCentreX+5, circleCentreY-5);\r\n      this.ctx.textAlign = \"end\";\r\n      this.ctx.fillText(\"II\", circleCentreX-5, circleCentreY-5);\r\n      this.ctx.textAlign = \"end\";\r\n      this.ctx.textBaseline = \"top\";\r\n      this.ctx.fillText(\"III\", circleCentreX-5, circleCentreY+5);\r\n      this.ctx.textAlign = \"start\";\r\n      this.ctx.fillText(\"IV\", circleCentreX+5, circleCentreY+5);\r\n    }\r\n  }\r\n\r\n  onMouseMove(e){\r\n    const mouseX = e.clientX;\r\n    const mouseY = e.clientY;\r\n    const circleCentreX = this.circle.centreX;\r\n    const circleCentreY = this.circle.centreY;\r\n    const radius = this.circle.radius;\r\n\r\n    // If the distance of this point is less than the distance of the radius to the circle's centre\r\n    if(Math.sqrt((mouseX-circleCentreX)*(mouseX-circleCentreX) + (mouseY-circleCentreY)*(mouseY-circleCentreY)) < radius){\r\n      this.resetCanvas();\r\n\r\n      let diffX = mouseX - circleCentreX;\r\n      let diffY = mouseY - circleCentreY;\r\n      let radians = -Math.atan2(diffY, diffX);\r\n\r\n      // The atan2 function returns negative radian values below 0, we want to show\r\n      // the degrees in the range of [0, 2*Math.PI] so if the degree is negative then\r\n      // just extract it from 2*Math.PI\r\n      if(radians < 0){\r\n        radians = (Math.PI * 2) + radians;\r\n      }\r\n\r\n      this.drawAngleLine(radians);\r\n\r\n      return radians;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport CanvasDrawer from \"./utils/CanvasDrawer.js\"\r\nimport \"./Canvas.css\";\r\n\r\nfunction Canvas(props) {\r\n  const canvasRef = useRef(null);\r\n  const width = window.innerWidth;\r\n  const height = window.innerHeight;\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    const canvasDrawer = new CanvasDrawer(ctx, width, height, props.trigVisible, props.circleDetails);\r\n    if(props.radianAngle != null){\r\n      canvasDrawer.drawAngleLine(props.radianAngle);\r\n    }\r\n    if(props.angleSelect){\r\n      let mouseDown = false;\r\n      canvas.onmousedown = (e) => {\r\n        canvasDrawer.onMouseMove(e);\r\n        mouseDown = true;\r\n      }\r\n      canvas.onmousemove = (e) => {\r\n        if(mouseDown){\r\n          const newRadians = canvasDrawer.onMouseMove(e);\r\n          props.handleGraphRadianChange(newRadians);\r\n        }\r\n      }\r\n      canvas.onmouseup = (e) => {\r\n        mouseDown = false;\r\n      }\r\n    }\r\n    else{\r\n      canvas.onmousedown = null;\r\n      canvas.onmousemove = null;\r\n      canvas.onmouseup = null;\r\n    }\r\n  }, [props.updateCount]);\r\n\r\n  return (\r\n    <canvas ref={canvasRef} width={width} height={height} className=\"canvas\">\r\n      <p>Your browser doesn\"t support canvas.</p>\r\n    </canvas>\r\n  );\r\n}\r\n\r\nexport default Canvas;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { slide as Menu } from 'react-burger-menu';\r\nimport \"../Menu.css\";\r\n\r\nfunction SettingsMenu(props) {\r\n  return (\r\n    <Menu noOverlay disableAutoFocus isOpen width={375}>\r\n      <button onClick={props.handleUpdateClicked} className=\"wide-button\">Update</button>\r\n      <label className=\"centered large-print underlined\" style={{padding: \"1em 0\"}}>\r\n          θ:\r\n          <input type=\"text\" style={{marginLeft: \"0.25em\"}} value={props.degreeAngle} onChange={props.handleDegreeAngleChange} className=\"small-input\" />\r\n          ° ≈\r\n          <input type=\"text\" style={{marginLeft: \"0.8em\", marginRight: \"0.25em\"}} value={props.radianAngle} onChange={props.handleRadianAngleChange} className=\"medium-input\" />\r\n          rad\r\n      </label>\r\n      <label className=\"centered large-print underlined\" style={{padding: \"1em 0\"}}>\r\n          Click & Hold Angle Select:\r\n          <input id=\"hold-click-checkbox\" type=\"checkbox\" defaultChecked onChange={props.handleAngleSelectionChange} />\r\n      </label>\r\n      <label className=\"centered large-print\">\r\n          Trigonometric Functions\r\n      </label>\r\n      <label className=\"centered\">\r\n          cos:\r\n          <input id=\"cos-checkbox\" type=\"checkbox\" defaultChecked onChange={props.handleTrigSelectionChange} />\r\n          sin:\r\n          <input id=\"sin-checkbox\" type=\"checkbox\" defaultChecked onChange={props.handleTrigSelectionChange} />\r\n          tan:\r\n          <input id=\"tan-checkbox\" type=\"checkbox\" defaultChecked onChange={props.handleTrigSelectionChange} />\r\n      </label>\r\n      <label className=\"centered underlined\" style={{paddingTop: \"1em\", paddingBottom: \"1em\"}}>\r\n          cot:\r\n          <input id=\"cot-checkbox\" type=\"checkbox\" defaultChecked onChange={props.handleTrigSelectionChange} />\r\n          sec:\r\n          <input id=\"sec-checkbox\" type=\"checkbox\" defaultChecked onChange={props.handleTrigSelectionChange} />\r\n          csc:\r\n          <input id=\"csc-checkbox\" type=\"checkbox\" defaultChecked onChange={props.handleTrigSelectionChange} />\r\n      </label>\r\n      <label className=\"centered large-print\">\r\n          Unit Circle Details\r\n      </label>\r\n      <label className=\"centered\">\r\n          Axes:\r\n          <input id=\"axis-checkbox\" type=\"checkbox\" defaultChecked onChange={props.handleCircleDetailChange} />\r\n          Degrees:\r\n          <input id=\"degree-checkbox\" type=\"checkbox\" defaultChecked onChange={props.handleCircleDetailChange} />\r\n          Radians:\r\n          <input id=\"radian-checkbox\" type=\"checkbox\" defaultChecked onChange={props.handleCircleDetailChange} />\r\n      </label>\r\n      <label className=\"centered small-print underlined\"style={{paddingBottom: \"1em\"}}>\r\n          Pi:\r\n          <input id=\"pi-checkbox\" type=\"checkbox\" defaultChecked onChange={props.handleCircleDetailChange} />\r\n          Quadrants:\r\n          <input id=\"quadrant-checkbox\" type=\"checkbox\" defaultChecked onChange={props.handleCircleDetailChange} />\r\n      </label>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default SettingsMenu;\r\n","import React, { useState, useRef } from \"react\";\r\nimport { slide as Menu } from 'react-burger-menu';\r\nimport \"../Menu.css\";\r\n\r\nfunction ValuesMenu(props) {\r\n  return (\r\n    <Menu right noOverlay disableAutoFocus isOpen width={375}>\r\n      <label className=\"centered large-print\">\r\n          Trigonometric Function Values\r\n      </label>\r\n      <label className=\"centered\">\r\n          cos(θ) = {props.trigValues.cos}\r\n      </label>\r\n      <label className=\"centered\">\r\n          sin(θ) = {props.trigValues.sin}\r\n      </label>\r\n      <label className=\"centered\">\r\n          tan(θ) = {props.trigValues.tan}\r\n      </label>\r\n      <label className=\"centered\">\r\n          cot(θ) = {props.trigValues.cot}\r\n      </label>\r\n      <label className=\"centered\">\r\n          sec(θ) = {props.trigValues.sec}\r\n      </label>\r\n      <label className=\"centered\">\r\n          csc(θ) = {props.trigValues.csc}\r\n      </label>\r\n    </Menu>\r\n  );\r\n}\r\n\r\nexport default ValuesMenu;\r\n","import React, { useState } from 'react';\nimport Canvas from './components/canvas/Canvas.js';\nimport SettingsMenu from './components/settings_menu/SettingsMenu.js';\nimport ValuesMenu from './components/values_menu/ValuesMenu.js';\nimport './App.css';\n\nimport {\n  degToRad,\n  radToDeg\n} from \"./utils/angleCalc.js\";\n\nfunction App() {\n  const [degreeAngle, setDegreeAngle] = useState(null);\n  const [radianAngle, setRadianAngle] = useState(null);\n  const [trigValues, setTrigValues] = useState({});\n  const [angleSelect, setAngleSelect] = useState(true);\n  const [trigVisible, setTrigVisible] = useState({\n    \"cos\": true,\n    \"sin\": true,\n    \"tan\": true,\n    \"cot\": true,\n    \"sec\": true,\n    \"csc\": true,\n  });\n  const [circleDetails, setCircleDetails] = useState({\n    \"axes\": true,\n    \"degrees\": true,\n    \"radians\": true,\n    \"pi\": true,\n    \"quadrants\": true,\n  });\n  const [updateCount, setUpdateCount] = useState(0);\n\n  const updateTrigValues = (radians) => {\n    setTrigValues({\n      \"cos\": Math.cos(degToRad(radians)).toFixed(5),\n      \"sin\": Math.sin(degToRad(radians)).toFixed(5),\n      \"tan\": Math.tan(degToRad(radians)).toFixed(5),\n      \"cot\": Math.atan(degToRad(radians)).toFixed(5),\n      \"sec\": (1/Math.cos(degToRad(radians))).toFixed(5),\n      \"csc\": (1/Math.sin(degToRad(radians))).toFixed(5),\n    });\n  }\n\n  const handleDegreeAngleChange = (event) => {\n    const input = event.target.value;\n    if(parseInt(input) >= 0 && parseInt(input) <= 360){\n      setDegreeAngle(input);\n      setRadianAngle(degToRad(input).toFixed(5));\n      updateTrigValues(input);\n    }\n    else{\n      console.log(\"ANGLE OUT OF BOUNDS\");\n    }\n  }\n\n  const handleRadianAngleChange = (event) => {\n    const input = event.target.value;\n    setRadianAngle(input);\n    setDegreeAngle(radToDeg(input).toFixed(0));\n    updateTrigValues(input);\n  }\n\n  const handleGraphRadianChange = (radians) => {\n    setRadianAngle(radians);\n    setDegreeAngle(radToDeg(radians).toFixed(0));\n    updateTrigValues(radians);\n  }\n\n  const handleUpdateClicked = (event) => {\n    setUpdateCount(updateCount + 1);\n  }\n\n  const handleAngleSelectionChange = (event) => {\n    setAngleSelect(event.target.checked);\n  }\n\n  const handleTrigSelectionChange = (event) => {\n    const newTrigVisible = trigVisible;\n    switch(event.target.id){\n      case \"cos-checkbox\":\n        newTrigVisible.cos = event.target.checked;\n        break;\n      case \"sin-checkbox\":\n        newTrigVisible.sin = event.target.checked;\n        break;\n      case \"tan-checkbox\":\n        newTrigVisible.tan = event.target.checked;\n        break;\n      case \"cot-checkbox\":\n        newTrigVisible.cot = event.target.checked;\n        break;\n      case \"sec-checkbox\":\n        newTrigVisible.sec = event.target.checked;\n        break;\n      case \"csc-checkbox\":\n        newTrigVisible.csc = event.target.checked;\n        break;\n    }\n    setTrigVisible(newTrigVisible);\n  }\n\n  const handleCircleDetailChange = (event) => {\n    const newCircleDetails = circleDetails;\n    switch(event.target.id){\n      case \"axis-checkbox\":\n        newCircleDetails.axes = event.target.checked;\n        break;\n      case \"degree-checkbox\":\n        newCircleDetails.degrees = event.target.checked;\n        break;\n      case \"radian-checkbox\":\n        newCircleDetails.radians = event.target.checked;\n        break;\n      case \"pi-checkbox\":\n        newCircleDetails.pi = event.target.checked;\n        break;\n      case \"quadrant-checkbox\":\n        newCircleDetails.quadrants = event.target.checked;\n        break;\n    }\n    setCircleDetails(newCircleDetails);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"settings-menu\">\n        <SettingsMenu\n          degreeAngle={degreeAngle}\n          radianAngle={radianAngle}\n          trigValues={trigValues}\n          handleDegreeAngleChange={handleDegreeAngleChange}\n          handleRadianAngleChange={handleRadianAngleChange}\n          handleUpdateClicked={handleUpdateClicked}\n          handleAngleSelectionChange={handleAngleSelectionChange}\n          handleTrigSelectionChange={handleTrigSelectionChange}\n          handleCircleDetailChange={handleCircleDetailChange}\n          />\n      </div>\n      <div className=\"values-menu\">\n        <ValuesMenu\n          radianAngle={radianAngle}\n          trigValues={trigValues}\n          handleUpdateClicked={handleUpdateClicked}\n          />\n      </div>\n      <Canvas\n        radianAngle={radianAngle}\n        angleSelect={angleSelect}\n        trigVisible={trigVisible}\n        circleDetails={circleDetails}\n        handleGraphRadianChange={handleGraphRadianChange}\n        updateCount={updateCount}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}